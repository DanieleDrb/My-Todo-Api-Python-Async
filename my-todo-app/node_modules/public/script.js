document.addEventListener('DOMContentLoaded', () => {
    const todoForm = document.getElementById('todo-form');
    const todoInput = document.getElementById('todo-input');
    const todoList = document.getElementById('todo-list');

    // Fetch todos from the server
    const fetchTodos = async () => {
        const response = await fetch('/api/todos');
        const todos = await response.json();
        todos.forEach(todo => addTodoToList(todo));
    };

    // Add a todo to the list
    const addTodoToList = (todo) => {
        const li = document.createElement('li');
        li.dataset.id = todo.id;
        li.className = todo.completed ? 'completed' : '';
        li.innerHTML = `
            <span>${todo.title}</span>
            <button class="delete-btn">Delete</button>
        `;
        li.querySelector('span').addEventListener('click', () => toggleTodoComplete(todo.id));
        li.querySelector('.delete-btn').addEventListener('click', () => deleteTodo(todo.id));
        todoList.appendChild(li);
    };

    // Create a new todo
    const createTodo = async (title) => {
        const response = await fetch('/api/todos', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ title })
        });
        const newTodo = await response.json();
        addTodoToList(newTodo);
    };

    // Toggle todo completion
    const toggleTodoComplete = async (id) => {
        const response = await fetch(`/api/todos/${id}`);
        const todo = await response.json();
        const updatedTodo = {
            ...todo,
            completed: !todo.completed
        };
        await fetch(`/api/todos/${id}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(updatedTodo)
        });
        document.querySelector(`li[data-id="${id}"]`).classList.toggle('completed');
    };

    // Delete a todo
    const deleteTodo = async (id) => {
        await fetch(`/api/todos/${id}`, {
            method: 'DELETE'
        });
        const li = document.querySelector(`li[data-id="${id}"]`);
        todoList.removeChild(li);
    };

    // Handle form submission
    todoForm.addEventListener('submit', (e) => {
        e.preventDefault();
        const title = todoInput.value.trim();
        if (title) {
            createTodo(title);
            todoInput.value = '';
        }
    });

    // Initial fetch of todos
    fetchTodos();
});

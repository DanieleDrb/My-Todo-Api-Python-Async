const express = require('express');
const bodyParser = require('body-parser');
const path = require('path');
const app = express();
const port = 3000;

app.use(bodyParser.json());
app.use(express.static(path.join(__dirname, 'public')));

let todos = [];
let id = 1;

// Get all todos
app.get('/api/todos', (req, res) => {
    res.json(todos);
});

// Get a single todo
app.get('/api/todos/:id', (req, res) => {
    const todo = todos.find(t => t.id === parseInt(req.params.id));
    if (!todo) return res.status(404).send('Todo not found');
    res.json(todo);
});

// Create a new todo
app.post('/api/todos', (req, res) => {
    const todo = {
        id: id++,
        title: req.body.title,
        completed: false
    };
    todos.push(todo);
    res.status(201).json(todo);
});

// Update a todo
app.put('/api/todos/:id', (req, res) => {
    const todo = todos.find(t => t.id === parseInt(req.params.id));
    if (!todo) return res.status(404).send('Todo not found');
    todo.title = req.body.title;
    todo.completed = req.body.completed;
    res.json(todo);
});

// Delete a todo
app.delete('/api/todos/:id', (req, res) => {
    const todoIndex = todos.findIndex(t => t.id === parseInt(req.params.id));
    if (todoIndex === -1) return res.status(404).send('Todo not found');
    const deletedTodo = todos.splice(todoIndex, 1);
    res.json(deletedTodo);
});

app.listen(port, () => {
    console.log(`Todo app listening at http://localhost:${port}`);
});
